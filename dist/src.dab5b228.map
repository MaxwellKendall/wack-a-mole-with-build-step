{"version":3,"sources":["src/index.js"],"names":["isGameOver","gameClock","activeTimeout","score","numberOfmoles","difficultyLevelMap","high","low","getRandomTimeoutDuration","document","getElementById","value","Math","floor","random","resetStats","hideAllmoles","querySelectorAll","forEach","mole","hidemole","displayStats","innerHTML","getRandommole","querySelector","generateRandomNumberBetween1and9","classList","contains","add","hidemoleAndSetNewmole","showRandommoleAndSetRandomHideTimeout","remove","showmole","setTimeout","bind","displayNotification","message","gameNotification","startGame","endGame","clearTimeout","addEventListener","Date","getFullYear"],"mappings":";;;AAEA,aAFA,QAAA,4BAEA,IAAA,OAAA,GAAA,WAEMA,IAGAC,EACAC,EAJAF,GAAa,EACbG,EAAQ,EACRC,EAAgB,EAGdC,EAAqB,CAAK,EAAA,CAAEC,KAAM,KAAMC,IAAK,KAAU,EAAA,CAAED,KAAM,IAAMC,IAAK,KAAU,EAAA,CAACD,KAAM,IAAMC,IAAK,KAAU,EAAA,CAAED,KAAM,IAAKC,IAAK,MAIlIC,EAA2B,WACTH,IAAAA,EAAAA,EAHSI,SAASC,eAAe,cAAcC,OAG7DJ,EAAAA,EAAAA,IAAKD,EAAAA,EAAAA,KACNM,OAAAA,KAAKC,MAAMD,KAAKE,SAAWR,GAAQC,GAKtCQ,EAAa,WACjBZ,EAAQ,EACRC,EAAgB,GAWZY,EAAe,WACnBP,SAASQ,iBAAiB,SAASC,QAAQ,SAACC,GAAWC,EAASD,MAI5DE,EAAe,WACnBZ,SAASC,eAAe,YAAYY,UAA8BnB,kBAAAA,OAAAA,EAAgBC,YAAAA,OAAAA,EAAlF,YAIImB,EAAgB,WACbd,OAAAA,SAASe,cAAuBC,SAAAA,OAzBMb,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,KAiCzEM,EAAW,SAACD,IAChBA,EAAKO,UAAUC,SAAS,SAAiBR,EAAKO,UAAUE,IAAI,SAGxDC,EAAwB,SAACV,GAC7BC,EAASD,GACTW,KAGIA,EAAwC,WAExC,IAAC9B,EAAY,CACTmB,IAAAA,EAAOI,KAlBA,SAACJ,GAChBf,IACAiB,IACAF,EAAKO,UAAUC,SAAS,SAAUR,EAAKO,UAAUK,OAAO,QAgBtDC,CAASb,GACTjB,EAAgB+B,WAAWJ,EAAsBK,KAAK,EAAMf,GAAOX,OAKjE2B,EAAsB,WAACC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,aAC/BC,EAAmB5B,SAASC,eAAe,wBACjD2B,EAAiBX,UAAUE,IAAI,sBAC/BS,EAAiBf,UAAYc,EAC7BH,WAAW,WACTI,EAAiBX,UAAUK,OAAO,uBACjC,OAICO,EAAY,WACZtC,IACFA,GAAa,EAzDfC,EAAYgC,WAAW,WACrBjC,GAAa,EACbgB,IACAmB,KACC,MAuDDpB,IACAM,IACAc,EAAoB,wBACpBL,MAGES,EAAU,WAACH,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,aACpBpC,IACHA,GAAa,EACbwC,aAAatC,GACbsC,aAAavC,GACbe,IACAmB,EAAoBC,GACpBrB,IACAM,MAkBJZ,SAASe,cAAc,UAAUiB,iBAAiB,QAASH,GAC3D7B,SAASe,cAAc,SAASiB,iBAAiB,QAASF,EAAQL,KAAK,EAAM,sBAC7EzB,SAASe,cAAc,UAAUiB,iBAAiB,QAhBhC,WAChBD,aAAatC,GACbqC,EAAQ,0BACRxB,IACAM,IACAiB,MAYF7B,SAASQ,iBAAiB,OAAOC,QAAQ,SAACC,GAAWA,EAAKsB,iBAAiB,QAVxD,SAACtB,GAClBC,EAASD,GACThB,IACAkB,KAO6Fa,KAAK,EAAMf,MAG1GE,IAGAZ,SAASC,eAAe,aAAaY,UAAqC,yBAAA,QAAA,IAAIoB,MAAOC,eA5HvF","file":"src.dab5b228.map","sourceRoot":"..","sourcesContent":["import './styles/scss/index.scss';\n\n(() => {\n  // global variables (scoped within IIFE closure)\n  let isGameOver = true;\n  let score = 0;\n  let numberOfmoles = 0;\n  let gameClock;\n  let activeTimeout;\n  const difficultyLevelMap = { 0: { high: 3500, low: 400 }, 1: { high: 2000, low: 400 }, 2: {high: 1000, low: 400 }, 3: { high: 850, low: 100 }};\n\n  const getDifficultyLevel = () => document.getElementById('difficulty').value;\n  \n  const getRandomTimeoutDuration = () => {\n    const { low, high } = difficultyLevelMap[getDifficultyLevel()];\n    return Math.floor(Math.random() * high) + low;\n  }\n  \n  // ensures a range between 9 and 1\n  const generateRandomNumberBetween1and9 = () => Math.floor(Math.random() * 9) + 1;\n  const resetStats = () => {\n    score = 0;\n    numberOfmoles = 0;\n  };\n  // sets game duration\n  const setGameClock = () => {\n    gameClock = setTimeout(() => {\n      isGameOver = true;\n      hideAllmoles();\n      displayNotification();\n    }, 15000);\n  };\n\n  const hideAllmoles = () => {\n    document.querySelectorAll('.mole').forEach((mole) => { hidemole(mole) });\n  }\n\n  // displays game stats\n  const displayStats = () => {\n    document.getElementById('js-score').innerHTML = `You've whacked ${score} out of ${numberOfmoles} moles!`;\n  };\n\n  // Functions for starting game\n  const getRandommole = () => {\n    return document.querySelector(`.mole-${generateRandomNumberBetween1and9()}`);\n  }\n  const showmole = (mole) => {\n    numberOfmoles++;\n    displayStats();\n    mole.classList.contains('hide') ? mole.classList.remove('hide') : null;\n  }\n\n  const hidemole = (mole) => {\n    mole.classList.contains('hide') ? null : mole.classList.add('hide');\n  }\n\n  const hidemoleAndSetNewmole = (mole) => {\n    hidemole(mole);\n    showRandommoleAndSetRandomHideTimeout();\n  }\n\n  const showRandommoleAndSetRandomHideTimeout = () => {\n    // if game is not over -- (A) show random mole, (B) set the random hide mole time out, (C) increment mole counter, (D) display new stats\n    if (!isGameOver) {\n      const mole = getRandommole();\n      showmole(mole);\n      activeTimeout = setTimeout(hidemoleAndSetNewmole.bind(this, mole), getRandomTimeoutDuration());\n    }\n  };\n\n  // functions for end a game\n  const displayNotification = (message = 'Game Over!') => {\n    const gameNotification = document.getElementById('js-game-notification');\n    gameNotification.classList.add('notification__open');\n    gameNotification.innerHTML = message;\n    setTimeout(() => {\n      gameNotification.classList.remove('notification__open');\n    }, 1500);\n  }\n\n  // game controls\n  const startGame = () => {\n    if (isGameOver) {\n      isGameOver = false;\n      setGameClock();\n      resetStats();\n      displayStats();\n      displayNotification('Starting a new game!');\n      showRandommoleAndSetRandomHideTimeout();\n    }\n  };\n  const endGame = (message = \"Game Over!\") => {\n    if (!isGameOver) {\n      isGameOver = true;\n      clearTimeout(activeTimeout);\n      clearTimeout(gameClock);\n      hideAllmoles();\n      displayNotification(message);\n      resetStats();\n      displayStats();\n    }\n  };\n\n  const resetGame = () => {\n    clearTimeout(activeTimeout);\n    endGame('Resetting your game...');\n    resetStats();\n    displayStats();\n    startGame();\n  };\n  const onMoleWack = (mole) => {\n    hidemole(mole);\n    score++;\n    displayStats();\n  };\n\n  // Event listeners\n  document.querySelector('.start').addEventListener('click', startGame);\n  document.querySelector(\".stop\").addEventListener(\"click\", endGame.bind(this, 'Ending your game!'));\n  document.querySelector(\".reset\").addEventListener(\"click\", resetGame)\n  document.querySelectorAll('img').forEach((mole) => { mole.addEventListener('click', onMoleWack.bind(this, mole)) });\n\n  // Show score\n  displayStats();\n  \n  // display footer\n  document.getElementById(\"js-footer\").innerHTML = `Maxwell Kendall &#169 ${new Date().getFullYear()}`;\n})();\n"]}