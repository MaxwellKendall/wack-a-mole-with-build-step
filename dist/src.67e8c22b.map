{"version":3,"sources":["src/index.js"],"names":["isGameOver","gameClock","activeTimeout","score","numberOfHogs","resetStats","hideAllHogs","document","querySelectorAll","forEach","hog","hideHog","displayStats","getElementById","innerHTML","getRandomHog","querySelector","generateRandomNumberBetween1and9","Math","floor","random","classList","contains","add","hideHogAndSetNewHog","console","log","showRandomHogAndSetRandomHideTimeout","remove","showHog","setTimeout","bind","rtrn","displayGameOverMessage","message","window","alert","startGame","endGame","clearTimeout","addEventListener","Date","getFullYear"],"mappings":";;;AACA,aADA,QAAA,4BACA,IAAA,OAAA,GAAA,WAEMA,IAGAC,EACAC,EAJAF,GAAa,EACbG,EAAQ,EACRC,EAAe,EAYbC,EAAa,WACjBF,EAAQ,EACRC,EAAe,GAWXE,EAAc,WAClBC,SAASC,iBAAiB,QAAQC,QAAQ,SAACC,GAAUC,EAAQD,MAIzDE,EAAe,WACnBL,SAASM,eAAe,YAAYC,UAA6BX,iBAAAA,OAAAA,EAAgBC,YAAAA,OAAAA,EAAjF,kBAIIW,EAAe,WACZR,OAAAA,SAASS,cAAsBC,QAAAA,OAzBOC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,KAiCzET,EAAU,SAACD,IACfA,EAAIW,UAAUC,SAAS,SAAiBZ,EAAIW,UAAUE,IAAI,SAGtDC,EAAsB,SAACd,GAC3Be,QAAQC,IAAI,wBAAyBhB,GACrCC,EAAQD,GACRiB,KAGIA,EAAuC,WAEvC,IAAC3B,EAAY,CACTU,IAAAA,EAAMK,KAnBA,SAACL,GACfN,IACAQ,IACAF,EAAIW,UAAUC,SAAS,SAAUZ,EAAIW,UAAUO,OAAO,QAiBpDC,CAAQnB,GACRR,EAAgB4B,WAAWN,EAAoBO,KAAK,EAAMrB,IArDtDsB,EAAOd,KAAKC,MAAsB,KAAhBD,KAAKE,UAAmB,IAChDK,QAAQC,IAAI,gCAAiCM,GACtCA,IAHwB,IACzBA,GA0DFC,EAAyB,WAACC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,aACxCC,OAAOC,MAAMF,IAITG,EAAY,WACZrC,IACFA,GAAa,EArDfC,EAAY6B,WAAW,WACrB9B,GAAa,EACbM,IACA2B,KACC,MAmDD5B,IACAO,IACAe,MAGEW,EAAU,WAACJ,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,aACpBlC,IACHA,GAAa,EACbuC,aAAarC,GACbqC,aAAatC,GACbK,IACA2B,EAAuBC,GACvB7B,IACAO,MAkBJL,SAASS,cAAc,UAAUwB,iBAAiB,QAASH,GAC3D9B,SAASS,cAAc,SAASwB,iBAAiB,QAASF,EAAQP,KAAK,EAAM,sBAC7ExB,SAASS,cAAc,UAAUwB,iBAAiB,QAjBhC,WAChBD,aAAarC,GACboC,EAAQ,0BACRjC,IACAO,IACAyB,MAaF9B,SAASC,iBAAiB,OAAOC,QAAQ,SAACC,GAAUA,EAAI8B,iBAAiB,QAXvD,SAAC9B,GACjBe,QAAQC,IAAI,mBACZf,EAAQD,GACRP,IACAS,KAO0FmB,KAAK,EAAMrB,MAGvGE,IAEAL,SAASM,eAAe,aAAaC,UAAqC,yBAAA,QAAA,IAAI2B,MAAOC,eApHvF","file":"src.67e8c22b.map","sourceRoot":"..","sourcesContent":["import './styles/scss/index.scss';\n(() => {\n  // global variables (scoped within IIFE closure)\n  let isGameOver = true;\n  let score = 0;\n  let numberOfHogs = 0;\n  let gameClock;\n  let activeTimeout;\n\n  // ensurses a random number greater than 3/4 of a second\n  const getRandomTimeoutDuration = () => {\n    const rtrn = Math.floor(Math.random() * 3500) + 750;\n    console.log('random time out duration is: ', rtrn);\n    return rtrn;\n  }\n  // ensures a range between 9 and 1\n  const generateRandomNumberBetween1and9 = () => Math.floor(Math.random() * 9) + 1;\n  const resetStats = () => {\n    score = 0;\n    numberOfHogs = 0;\n  };\n  // sets game duration\n  const setGameClock = () => {\n    gameClock = setTimeout(() => {\n      isGameOver = true;\n      hideAllHogs();\n      displayGameOverMessage();\n    }, 15000);\n  };\n\n  const hideAllHogs = () => {\n    document.querySelectorAll('.hog').forEach((hog) => { hideHog(hog) });\n  }\n\n  // displays game stats\n  const displayStats = () => {\n    document.getElementById('js-score').innerHTML = `You've wacked ${score} out of ${numberOfHogs} ground hogs!`;\n  };\n\n  // Functions for starting game\n  const getRandomHog = () => {\n    return document.querySelector(`.hog-${generateRandomNumberBetween1and9()}`);\n  }\n  const showHog = (hog) => {\n    numberOfHogs++;\n    displayStats();\n    hog.classList.contains('hide') ? hog.classList.remove('hide') : null;\n  }\n\n  const hideHog = (hog) => {\n    hog.classList.contains('hide') ? null : hog.classList.add('hide');\n  }\n\n  const hideHogAndSetNewHog = (hog) => {\n    console.log('hideHogAndSetNewHog: ', hog);\n    hideHog(hog);\n    showRandomHogAndSetRandomHideTimeout();\n  }\n\n  const showRandomHogAndSetRandomHideTimeout = () => {\n    // if game is not over -- (A) show random hog, (B) set the random hide hog time out, (C) increment hog counter, (D) display new stats\n    if (!isGameOver) {\n      const hog = getRandomHog();\n      showHog(hog);\n      activeTimeout = setTimeout(hideHogAndSetNewHog.bind(this, hog), getRandomTimeoutDuration());\n    }\n  };\n\n  // functions for end a game\n  const displayGameOverMessage = (message = 'Game Over!') => {\n    window.alert(message);\n  }\n\n  // game controls\n  const startGame = () => {\n    if (isGameOver) {\n      isGameOver = false;\n      setGameClock();\n      resetStats();\n      displayStats();\n      showRandomHogAndSetRandomHideTimeout();\n    }\n  };\n  const endGame = (message = \"Game Over!\") => {\n    if (!isGameOver) {\n      isGameOver = true;\n      clearTimeout(activeTimeout);\n      clearTimeout(gameClock);\n      hideAllHogs();\n      displayGameOverMessage(message);\n      resetStats();\n      displayStats();\n    }\n  };\n  const resetGame = () => {\n    clearTimeout(activeTimeout);\n    endGame('Resetting your game...');\n    resetStats();\n    displayStats();\n    startGame();\n  };\n  const onHogWack = (hog) => {\n    console.log('hog was clicked');\n    hideHog(hog);\n    score++;\n    displayStats();\n  };\n\n  // Event listeners\n  document.querySelector('.start').addEventListener('click', startGame);\n  document.querySelector(\".stop\").addEventListener(\"click\", endGame.bind(this, 'Ending your game!'));\n  document.querySelector(\".reset\").addEventListener(\"click\", resetGame)\n  document.querySelectorAll('img').forEach((hog) => { hog.addEventListener('click', onHogWack.bind(this, hog)) });\n\n  // Show score\n  displayStats();\n  // display footer\n  document.getElementById(\"js-footer\").innerHTML = `Maxwell Kendall &#169 ${new Date().getFullYear()}`;\n})();\n"]}